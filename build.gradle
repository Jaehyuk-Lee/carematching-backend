plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.sesac'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// devtools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.springframework.security:spring-security-test'

	// spring data jdbc, oracle, log4jdbc
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.2.0'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    // circuit breaker
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.2.0'

	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Springdoc-openapi
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'

    //websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.2.2'

	// commons-pool2 for Lettuce pooling
	implementation 'org.apache.commons:commons-pool2:2.11.1'

    // MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // AWS
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.438'

}

tasks.named('test') {
	useJUnitPlatform()
}

// 간단한 부하 테스트를 실행하기 위한 helper tasks
tasks.register('runLoadTestNoPool', JavaExec) {
	group = 'verification'
	description = 'Run LoadTestNoPool (creates new Redis client per operation)'
	classpath = sourceSets.main.runtimeClasspath
	mainClass.set('com.sesac.carematching.tools.LoadTestNoPool')
	// 기본 args: host, port, threads, opsPerThread
	args = ['127.0.0.1','6379','200','200']
}

tasks.register('runLoadTestReuse', JavaExec) {
	group = 'verification'
	description = 'Run LoadTestReuse (reuse single Redis connection)'
	classpath = sourceSets.main.runtimeClasspath
	mainClass.set('com.sesac.carematching.tools.LoadTestReuse')
	args = ['127.0.0.1','6379','200','200']
}
